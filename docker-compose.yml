#version: '3.8'

services:
#  database:
#    image: postgres:16.1
#    container_name: pg-docker
#    environment:
#      POSTGRES_USER: ${DB_USER:-admin}
#      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
#      POSTGRES_DB: gym
#    ports:
#      - "5432:5432"
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#      - ./initdb/scripts_python/init_schema.sql:/docker-entrypoint-initdb.d/1_init_schema.sql
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d gym"]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#    networks:
#      - app-network

#  init-db:
#    build: ./initdb
#    container_name: db-init
#    environment:
#      DB_HOST: database
#      DB_PORT: 5432
#      DB_NAME: gym
#      DB_USER: admin
#      DB_PASSWORD: secret
#    depends_on:
#      database:
#        condition: service_healthy
#    networks:
#      - app-network

#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
#    ports:
#      - "5050:80"
#    depends_on:
#      - database
#    networks:
#      - app-network

  app:
    build: .
    container_name: main-service
#    depends_on:
#      - database
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_URL:-10.60.3.26}:${DB_PORT:-5432}/module1?currentSchema=${DB_NAME:-gym}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_URL:-10.60.3.26}:${DB_PORT:-5432}/${DB_NAME:-gym}?currentSchema=public
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-postgres}
      KAFKA_HOSTS: ${KAFKA_HOSTS:-hl22.zil:9094,hl23.zil:9094}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID:-klepa300-consumer-group}
      KAFKA_TOPIC: ${KAFKA_TOPIC:-var12}
      KAFKA_CONCURRENCY: ${KAFKA_CONCURRENCY:-2}
      SERVER_TOMCAT_THREADS_MAX: 200
      SERVER_TOMCAT_ACCEPT_COUNT: 100
      SPRING_JPA_SHOW_SQL: "false"
#      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "false"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    networks:
      - app-network

  additional-service:
    build: ../additional-service
    container_name: additional-service
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    environment:
       MAIN_SERVICE_URL: http://main-service:8080/
    ports:
      - "8081:8081"
    depends_on:
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
