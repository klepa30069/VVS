version: '3.8'

services:
  database:
    image: postgres:16.1
    container_name: pg-docker
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: gym
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./initdb/scripts_python/init_schema.sql:/docker-entrypoint-initdb.d/1_init_schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d gym"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  init-db:
    build: ./initdb
    container_name: db-init
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: gym
      DB_USER: admin
      DB_PASSWORD: secret
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network

  app:
    build: .
    container_name: spring-boot-app
    depends_on:
      - database
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/gym
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
